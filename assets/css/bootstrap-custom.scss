--- 
--- 
@charset "utf-8";
@use 'sass:color';

$dark: #210002;

@use "bootstrap" as bs with (
// needed for some fine-tuning (related to icons)
$enable-negative-margins: true,
// use color palette
// orange color palette is really hard
// copied some colors off
// https://www.firewatchgame.com/
$primary: #5c1715,
$secondary: #e0711d,
// $light: color.scale(#ffb57d, $whiteness: 20%);
// $body-bg: color.scale(#ffaf00, $whiteness: 80%);
$dark: $dark,
// This is a bit hacky: it supresses the warning for contrast ratios on colors.
$min-contrast-ratio: 3,
$light: color.scale(#ffbb69, $whiteness: 20%),
$body-bg: color.scale(#ffbb69, $whiteness: 50%),
$white: color.change($dark, $whiteness: 100%),
$gray-100: color.change($dark, $whiteness: 90%),
$gray-200: color.change($dark, $whiteness: 80%),
$gray-300: color.change($dark, $whiteness: 70%),
$gray-400: color.change($dark, $whiteness: 60%),
$gray-500: color.change($dark, $whiteness: 50%),
$gray-600: color.change($dark, $whiteness: 40%),
$gray-700: color.change($dark, $whiteness: 30%),
$gray-800: color.change($dark, $whiteness: 20%),
$gray-900: color.change($dark, $whiteness: 10%),
$black: color.change($dark, $whiteness: 0%),
$font-family-base: ("Poppins", sans-serif),
$font-size-base: 1.2rem,
);

// import fonts
@import url('https://fonts.googleapis.com/css2?family=Dancing+Script:wght@400..700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Dancing+Script:wght@400..700&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Creepster&display=swap');

.thick-strikethrough {
  position: relative;
  display: inline-block;
}

.thick-strikethrough::before {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  top: 50%;
  /* Adjust this value to move the line up or down */
  height: 3px;
  /* This controls the thickness of the strikethrough */
  background-color: currentColor;
  /* This makes the line the same color as the text */
  transform: translateY(-50%);
  pointer-events: none;
}

// .nav-link,h1,h2 {
//     font-family: Lora;
// }
//

.sf-talk-card-img {
  position: relative;
  width: 100%;
  height: 40vh;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  background-size: cover;  /* Equivalent to object-fit: cover */
  background-position: center;
}

.sf-talk-card-img::before {
  content: '';
  position: absolute;
  top: -10%;
  left: -10%;
  width: 120%;
  height: 120%;
  background-image: inherit; /* Inherits background from inline style */
  background-size: cover;
  background-position: center;
  filter: blur(20px); /* Apply blur */
  z-index: 1; /* Layer this behind the image */
}

.sf-talk-card-img img {
  position: relative;
  z-index: 2;
  max-width: 90%;
  max-height: 90%;
  object-fit: contain;
}

.sf-talk-img {
  position: relative;
  width: 100%;
  height: 60vh;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  background-size: cover;  /* Equivalent to object-fit: cover */
  background-position: center;
}

.sf-talk-img::before {
  content: '';
  position: absolute;
  top: -10%;
  left: -10%;
  width: 120%;
  height: 120%;
  background-image: inherit; /* Inherits background from inline style */
  background-size: cover;
  background-position: center;
  filter: blur(20px); /* Apply blur */
  z-index: 1; /* Layer this behind the image */
}

.sf-talk-img img {
  position: relative;
  z-index: 2;
  max-width: 90%;
  max-height: 90%;
  object-fit: contain;
}

.sf-bg-blurred>div:first-child {
  position: absolute;
  filter: blur(5px);
  margin: 8px;
  height: calc(100% - 16px);
  width: calc(100% - 16px);
  background-position: center;
  background-size: cover;
  z-index: 2;
}

.sf-bg-blurred>div:nth-child(2) {
  position: absolute;
  height: 100%;
  width: 100%;
  background-position: center;
  background-size: cover;
  z-index: 1;
}

.sf-bg-blurred>img {
  z-index: 5;
  top: 50%;
  transform: translateY(-50%);
}

.text-justify {
  // text-align: justify;
  // text-justify: inter-word;
}

// .sf-searchbar {
//     background: $gray-100;
// }

// Animated navbar toggler
.sf-navbar-toggler-icon {
  display: grid;
  position: relative;
  width: 1.25em;
  height: 1.25em;
  vertical-align: middle;
}

.collapsed>.sf-navbar-toggler-icon>.bar {
  &:nth-child(1) {
    top: 0;
  }

  &:nth-child(2) {
    transform: translateY(-50%);
    top: 50%;
  }

  &:nth-child(3) {
    bottom: 0%;
  }
}

:not(.collapsed)>.sf-navbar-toggler-icon>.bar {
  &:nth-child(1) {
    transform: translateY(-50%) rotate(225deg);
    top: 50%;
  }

  &:nth-child(2) {
    transform: translateY(-50%);
    top: 50%;
    opacity: 0;
  }

  &:nth-child(3) {
    transform: translateY(-50%) rotate(-225deg);
    top: 50%;
  }
}

.sf-navbar-toggler-icon>.bar {
  display: inline-block;
  border-radius: 5px;
  height: 5px;
  width: 1.25em;
  background-color: bs.$gray-500;
  position: absolute;
  vertical-align: middle;
  transition: all .5s ease-in-out;
}

.sf-navbar-toggler-icon-container {
  display: grid;
  position: relative;
  width: 1em;
  height: 1em;
  vertical-align: middle;
}

.collapsed>.sf-navbar-toggler-icon-minor .bar {
  &:nth-child(1) {
    transform: translateY(-50%) translateX(29.3%) rotate(-45deg);
  }

  &:nth-child(2) {
    transform: translateY(-50%) translateX(-29.3%) rotate(45deg);
  }
}

:not(.collapsed)>.sf-navbar-toggler-icon-minor .bar {
  &:nth-child(1) {
    transform: translateY(-50%) translateX(29.3%) rotate(-135deg);
  }

  &:nth-child(2) {
    transform: translateY(-50%) translateX(-29.3%) rotate(135deg);
  }
}

.sf-navbar-toggler-icon-minor .bar {
  display: inline-block;
  border-radius: 5px;
  height: 5px;
  width: 1em;
  background-color: bs.$primary;
  position: absolute;
  vertical-align: middle;
  transition: all .5s ease-in-out;
  top: 50%;

}

// End animated navbar toggler


.sf-logo {
  // font-family: "Dancing Script";
  font-family: "Creepster", system-ui;
  font-weight: 400;
  font-style: normal;
  @include bs.rfs(5rem, height);

  @include bs.media-breakpoint-down(lg) {
    @include bs.rfs(6rem);
  }
}

.sf-logo-header {
  text-decoration: none;
}

.sf-logo-image {
  transition: all .2s ease-in-out;
  @include bs.rfs(5rem, height);

  @include bs.media-breakpoint-down(lg) {
    @include bs.rfs(6rem, height);
  }
}

.sf-logo-header:hover>.sf-logo-image {
  transform: rotate(10deg) scale(1.15);
}

.text-gray {
  color: bs.$gray-600;
}

.bg-light-hover:hover {
  @extend .bg-light;
}

.bg-primary-hover:hover {
  @extend .bg-primary;
}

.img-fluid-vertical {
  max-height: 100%;
  width: auto;
}

// apply rounded corners at breakpoint in navbar correctly
@each $name, $value in bs.$grid-breakpoints {
  @include bs.media-breakpoint-up(#{$name}) {
    .rounded-first-#{$name} {
      @include bs.border-start-radius(bs.$border-radius);
    }
  }

  @include bs.media-breakpoint-down(#{$name}) {
    .rounded-first-#{$name} {
      @include bs.border-top-radius(bs.$border-radius);
    }
  }

  @include bs.media-breakpoint-up(#{$name}) {
    .rounded-last-#{$name} {
      @include bs.border-end-radius(bs.$border-radius);
    }
  }

  @include bs.media-breakpoint-down(#{$name}) {
    .rounded-last-#{$name} {
      @include bs.border-bottom-radius(bs.$border-radius);
    }
  }

}

// This fixes apperent incompatibility between flex-column
// And the navbar-collapse animations
.sf-navbar-collapse {
  flex-basis: auto !important;
}

// Halloween flying bats
.halloween-bats {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 1000;
  overflow: hidden;
}

.bat {
  position: absolute;
  font-size: 1.5rem;
  color: #000;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
  animation-play-state: paused;
  opacity: 0;
  left: 10%;
  top: 5%;
  transform: scale(0);
  transition: opacity 2s ease-in-out, transform 2s ease-in-out;
}

.halloween-bats.active .bat {
  animation-play-state: running;
  opacity: 1;
  transform: scale(1);
  transition: opacity 2s ease-in-out, transform 2s ease-in-out;
}

.bat1 { animation: fly1 15s linear infinite; }
.bat2 { animation: fly2 20s linear infinite; }
.bat3 { animation: fly3 12s linear infinite; }
.bat4 { animation: fly4 18s linear infinite; }
.bat5 { animation: fly5 25s linear infinite; }
.bat6 { animation: fly6 14s linear infinite; }
.bat7 { animation: fly7 22s linear infinite; }
.bat8 { animation: fly8 16s linear infinite; }

@keyframes fly1 {
  0% { transform: translateX(-50px) translateY(10vh) rotate(0deg); }
  25% { transform: translateX(50vw) translateY(30vh) rotate(10deg); }
  50% { transform: translateX(100vw) translateY(20vh) rotate(-5deg); }
  75% { transform: translateX(70vw) translateY(60vh) rotate(15deg); }
  100% { transform: translateX(-50px) translateY(80vh) rotate(0deg); }
}

@keyframes fly2 {
  0% { transform: translateX(100vw) translateY(15vh) rotate(0deg); }
  30% { transform: translateX(30vw) translateY(40vh) rotate(-10deg); }
  60% { transform: translateX(-50px) translateY(25vh) rotate(5deg); }
  100% { transform: translateX(100vw) translateY(70vh) rotate(0deg); }
}

@keyframes fly3 {
  0% { transform: translateX(-50px) translateY(50vh) rotate(0deg); }
  40% { transform: translateX(80vw) translateY(10vh) rotate(20deg); }
  100% { transform: translateX(-50px) translateY(90vh) rotate(0deg); }
}

@keyframes fly4 {
  0% { transform: translateX(100vw) translateY(80vh) rotate(0deg); }
  50% { transform: translateX(20vw) translateY(20vh) rotate(-15deg); }
  100% { transform: translateX(100vw) translateY(5vh) rotate(0deg); }
}

@keyframes fly5 {
  0% { transform: translateX(-50px) translateY(30vh) rotate(0deg); }
  20% { transform: translateX(40vw) translateY(60vh) rotate(10deg); }
  60% { transform: translateX(90vw) translateY(40vh) rotate(-10deg); }
  100% { transform: translateX(-50px) translateY(10vh) rotate(0deg); }
}

@keyframes fly6 {
  0% { transform: translateX(100vw) translateY(40vh) rotate(0deg); }
  35% { transform: translateX(60vw) translateY(70vh) rotate(25deg); }
  70% { transform: translateX(10vw) translateY(20vh) rotate(-20deg); }
  100% { transform: translateX(100vw) translateY(85vh) rotate(0deg); }
}

@keyframes fly7 {
  0% { transform: translateX(-50px) translateY(70vh) rotate(0deg); }
  45% { transform: translateX(75vw) translateY(30vh) rotate(15deg); }
  100% { transform: translateX(-50px) translateY(50vh) rotate(0deg); }
}

@keyframes fly8 {
  0% { transform: translateX(100vw) translateY(60vh) rotate(0deg); }
  25% { transform: translateX(80vw) translateY(10vh) rotate(-20deg); }
  75% { transform: translateX(25vw) translateY(80vh) rotate(10deg); }
  100% { transform: translateX(100vw) translateY(35vh) rotate(0deg); }
}
